---
title: "WOR MAB"
output: html_document
---

To run this markdown, be sure that the "biomark-bioinformatics" folder is located in your Documents directory, or change the directory to the correct folder in the first chunk.

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "~/Documents/biomark-bioinformatics/")
```

```{r libraries, include=FALSE}
library(tidyverse)
library(ggh4x)
library(viridis)
library(phyloseq)
library(phylosmith)
library(venn)
library(rstatix)
library(ggpubr)
```

# 16S amplicon data

```{r}
worle <- readRDS("data/Worle_curated.RDS") # Worle data

# set taxa to ASV, otherwise uses the sequence as taxa name
taxa_names(worle) <- paste0("ASV", seq(ntaxa(worle)))

allsoil <- subset_samples(worle, matrix == "soil") %>%
  filter_taxa(function(x) sum(x) >= 1, T)

# strip subset, all strip soil from baseline samples in addition to no_manure_strip treatment, not the | operator 
worle.strip <- subset_samples(worle, matrix == "soil" & sample_day == "Baseline" & soil_type == "strip" | 
                                matrix == "soil" & treatment == "no_manure_strip" & soil_type == "strip") %>%
  filter_taxa(function(x) sum(x) >= 1, T) 

worle.crop <- subset_samples(worle, matrix == "soil" & sample_day == "Baseline" & soil_type == "crop" | 
                                matrix == "soil" & treatment == "no_manure_strip" & soil_type == "crop") %>%
  filter_taxa(function(x) sum(x) >= 1, T)

worle.border <- subset_samples(worle, matrix == "soil" & sample_day == "Baseline" & soil_type == "border" | 
                                matrix == "soil" & treatment == "no_manure_strip" & soil_type == "border") %>%
  filter_taxa(function(x) sum(x) >= 1, T)

worle.manure <- subset_samples(worle, matrix == "manure") %>%
  filter_taxa(function(x) sum(x) >= 1, T)

worle.water <- subset_samples(worle, matrix == "water" & unique_id != "Comp-from-P8-7-10-26-17") %>%
  filter_taxa(function(x) sum(x) >= 1, T)
```
Here is a nice trick to keep phyla colors the same: 

```{r}
### Scale color for phyla, consistent phyla colors across plots
#Function to make all phyla colors consistent

phylalist <- data.frame(tax_table(worle),row.names = NULL) %>%
  select(Phylum) %>%
  unique() 
phylalist$Phylum <- as.character(phylalist$Phylum)
phylalist$Phylum[is.na(phylalist$Phylum)] <- "Unclassified"

# this package will generate a pallette based on number and desired colors
library(colorspace)
colors <- sequential_hcl(n_distinct(phylalist), palette = "viridis") %>%
  sample() %>% # This will help randomize the order
  setNames(phylalist$Phylum)
```


```{r}
sample_sums(worle.water) %>%
  enframe(name = "Sample", value = "Sample Sums") %>%
  separate(col = "Sample", into = c("Plot", "Time")) %>%
  ggplot(aes(x = Plot, y = `Sample Sums`, fill = Time)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.5)) + 
  coord_flip()
```
# Manure phyla
## Figure 1   
Manure taxa abundance
```{r}
#ggsave(filename = "plots/worlemanuretaxa.png", plot = last_plot(), device = "png", width = 6.5, height = 7.5, units = "in", dpi = 350)

phydf <- worle.manure %>%
  tax_glom(taxrank = "Phylum") %>%
  transform_sample_counts(function(x) x / sum(x)) %>%
  psmelt() 

phydf %>%
  ggplot(aes(x = reorder(Phylum, Abundance), y = Abundance, fill = Sample)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.75)) +
  labs(y = "Relative abundance of phyla", x = "Phyum") +
  scale_fill_manual(labels = c("PMB1A1" = "Manure.1-1", "PMB1D1" = "Manure.1-2", "PMB2B1" = "Manure.2-1", "PMB2E2" = "Manure.2-2", "PMB3C1" = "Manure.3-1", "PMB3F1" = "Manure.3-2"), 
                      name = "Replicated manure samples", 
                      values = c("#4B0055", "#274983", "#008298", "#00B28A", "#7ED357", "#FDE333"
)) + coord_flip() +
  theme_minimal()
```


```{r}
phydf <- worle.manure %>%
  tax_glom(taxrank = "Family") %>%
  transform_sample_counts(function(x) x / sum(x)) %>%
  psmelt() 

phydf %>%
  filter(Phylum == "Firmicutes") %>%
  ggplot(aes(x = Sample, y = Abundance, fill = Family)) +
  geom_bar(stat = "identity") 

phydf %>%
  filter(Family == "Bacillaceae_2") %>%
  ggplot(aes(x = Sample, y = Abundance, fill = Family)) +
  geom_bar(stat = "identity") 

worle.manure %>%
  subset_taxa(Family == "Bacillaceae_2") %>%
  phylogeny_profile(classification = "Genus")


a <- worle.water %>%
  subset_samples(treatment %in% c("manured_strip", "manured_control")) %>%
  transform_sample_counts(function(x) x / sum(x)) %>%
  phylogeny_profile(classification = "Phylum") +
  scale_color_manual(aesthetics = "fill", values = colors)

b <- worle.manure %>%
  transform_sample_counts(function(x) x / sum(x)) %>%
  phylogeny_profile(classification = "Phylum") +
  scale_color_manual(aesthetics = "fill", values = colors)

worle.water %>%
  transform_sample_counts(function(x) x / sum(x)) %>%
  subset_taxa(Phylum == "Firmicutes") %>%
  phylogeny_profile(classification = "Genus") 

sub <- worle %>%
  subset_samples(matrix %in% c("water", "manure")) 

pcoa_phyloseq(sub, c('matrix'), circle = F)

  
```


# Number of taxa

```{r}
# Make a list of ASVs associated with each type of soil and manure
worle_manure_asvs <- taxa_names(worle.manure)
worle_crop_soil_asvs <- taxa_names(worle.crop)
worle_strip_soil_asvs <- taxa_names(worle.strip)
worle_border_asvs <- taxa_names(worle.border)
worle_water_asvs <- taxa_names(worle.water)
worle_soil_asvs <- taxa_names(allsoil)

# venn diagram
worle_vvv_diag <- venn(list("Manure_ASVs" = worle_manure_asvs, "Crop_ASVs" = worle_crop_soil_asvs, "Strip_ASVs" = worle_strip_soil_asvs, "Border_ASVs" = worle_border_asvs))

# Access ASVs unique to each soil and manure and store
worle_manure_persitors <- attr(worle_vvv_diag, "intersections")$Manure_ASVs
worle_crop_persistors <- attr(worle_vvv_diag, "intersections")$Crop_ASVs
worle_strip_persistors <- attr(worle_vvv_diag, "intersection")$Strip_ASVs
worle_border_persistors <- attr(worle_vvv_diag, "intersections")$Border_ASVs
```

```{r}
Sample_Type <- c("Manure", "Crop", "Strip", "Border")
Number_of_taxa <- c(ntaxa(worle.manure), ntaxa(worle.crop), ntaxa(worle.strip), ntaxa(worle.border))
Taxa_unique_to <- c(length(worle_manure_persitors), length(worle_crop_persistors), length(worle_strip_persistors), length(worle_border_persistors))

df <- data.frame(Sample_Type, Number_of_taxa, Taxa_unique_to)
df
```

```{r}
#install.packages("ggvenn")
library("ggvenn")
```

# Manure taxa venn diagram

```{r}
ggvenn(list("Manure" = worle_manure_asvs, "Crop" = worle_crop_soil_asvs, "Strip" = worle_strip_soil_asvs, "Border" = worle_border_asvs), set_name_size = 4, show_percentage = F) + scale_fill_viridis_d()

ggsave("plots/vennASVS.png", plot = last_plot(), units = "in", width = 6.5, dpi = 300)
```

We can assign an association to each ASV based on where it was detected.

```{r}
worle.water
```

```{r}
tax_association <- tax_table(worle.water) %>% 
  data.frame() %>%
  rownames_to_column("ASV") %>%
  mutate(ASV_Association = ifelse(ASV %in% worle_manure_persitors, "MAB","SAB")) %>%
  mutate(asv = ASV) %>%
  column_to_rownames("ASV") %>%
  rename(ASV = asv) %>%
  as.matrix() 

tax_table(worle.water) <- tax_association
```

```{r}
####
# Testing relative abundance plot with full water data set
# plot <- phylogeny_profile(worle.water, classification = 'ASV_Association', treatment = c("treatment"), merge = TRUE, relative_abundance = TRUE) + 
#   facet_nested(. ~ treatment + plot, scales = "free", space = "free") +
#   theme(legend.position = "top",
#              axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# 
# data <- plot$data %>%
#   separate(col = unique_id, into = c("p", "time"), sep = "-")
# 
# plot
# 
# levels(data$treatment) <- c("Crop + Manure", "Crop + Strip + Manure", "Crop + Strip")
# 
# data$time <- as.factor(data$time)
# 
# levels(data$time) <- c("2.5", "7.5", "12.5", "17.5", "22.5", "27.5")
# data$treatment_f <- factor(data$treatment, levels = c("Crop + Strip", "Crop + Strip + Manure", "Crop + Manure"))
# 
# ggplot(data = data, aes(x = time, y = Abundance)) +
#   geom_bar(stat = "identity", aes(fill = ASV_Association)) + 
#   facet_nested(. ~ treatment_f + plot, scales = "free", space = "free") +
#   theme_classic() +
#   theme(
#     legend.position = "top", 
#     panel.background = element_rect(color = 'black', size = 1.4),
#     strip.text.x = element_text(size = 10, face = 'bold'),
#     strip.background = element_rect(colour = 'black', size = 1.4),
#     axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
#     scale_fill_viridis_d(option = "plasma") +
#     labs(x = "Sample time (min) after runoff", y = "Relative abundance", fill = "ASV \nAssociation") 
```

# Manure in non-manured water?

Our sampling depth may not have fully captured the ASVs associated with manure and soil, and we find that some MAB are present in non-manured runoff water. Let's remove those ASVs. (Uncomment code above)

```{r}
ASVsinCS <- subset_samples(worle.water, treatment == "no_manure_strip") %>%
  subset_taxa(ASV_Association == "MAB") %>% 
  psmelt()
head(ASVsinCS)
range(ASVsinCS$Abundance)

ASVsinCS <- ASVsinCS %>%
  filter(Abundance > 0) %>%
  select(OTU, Abundance, Phylum, Class, Order, Family, Genus)

removeASVs <- ASVsinCS$OTU

cleanwater <- subset_taxa(worle.water, !ASV %in% removeASVs)

cleanwater 


# What are the abundances of phyla in the two manured treatment's runoff water?


head(cleanwater@tax_table)
sp <- cleanwater %>%
  transform_sample_counts(function(x) x / sum(x)) %>%
  subset_taxa(ASV_Association == "MAB")
sp

p <- phylogeny_profile(sp, classification = 'Phylum', treatment = c("treatment"), merge = TRUE, relative_abundance = F) +
  facet_nested(. ~ treatment + plot, scales = "free", space = "free") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
        legend.position = "top") +
  guides(fill = guide_legend(ncol=3)) +
  labs(y = "Relative abundance of MAB") +
  scale_x_discrete()



df <- p$data %>%
  separate(col = unique_id, into = c("p", "time"), sep = "-") %>%
  filter(!treatment == "no_manure_strip")

levels(df$treatment) <- c("Crop + Manure", "Crop + Strip + Manure", "Crop + Strip")

df$treatment <- ordered(df$treatment, levels = c("Crop + Strip", "Crop + Strip + Manure", "Crop + Manure"))

ggplot(data = df, aes(x = time, y = Abundance)) +
  geom_bar(stat = "identity", aes(fill = Phylum), colour = "black") +
  facet_nested(. ~ treatment + plot, scales = "free", space = "free") +
  theme_classic() +
  theme(
    legend.position = "top",
    panel.background = element_rect(color = 'black', size = 1.4),
    strip.text.x = element_text(size = 10, face = 'bold'),
    strip.background = element_rect(colour = 'black', size = 1.4),
    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
    scale_color_manual(aesthetics = "fill", values = colors) +
    labs(x = "Sample time (min) after runoff", y = "Relative abundance of MAB", fill = "Phylum") +
  scale_x_discrete(labels = c("1" = "2.5", "2" = "7.5", "3" = "12.5", "4" = "17.5", "5" = "22.5", "6" = "27.5")) +
  guides(fill = guide_legend(nrow = 4))

ggsave(filename = "plots/manuretaxainwater.png", plot = last_plot(), device = "png", width = 6.5, height = 7.5, units = "in", dpi = 350)
```
```{r}
d <- df %>%
  group_by(plot, time, treatment) %>%
  summarise(`MAB Abundance` = sum(Abundance)) %>%
  ungroup()

res.kruskal <- d %>%
  kruskal_test(`MAB Abundance` ~ treatment)
res.kruskal

pwc <- d %>%
  dunn_test(`MAB Abundance` ~ treatment, p.adjust.method = "bonferroni")
pwc

pwc <- pwc %>% add_xy_position(x = "treatment")

d %>%
  ggboxplot(x = "treatment", y = "MAB Abundance") +
  stat_pvalue_manual(pwc, hide.ns = F) +
  labs(
    subtitle = get_test_label(res.kruskal, detailed = TRUE),
    caption = get_pwc_label(pwc)
    )
```

# Abundance of MAB in runoffwater

```{r}
range(d$`MAB Abundance`)

df %>%
  group_by(Phylum, plot) %>%
  summarise(
    MeanAbund = mean(Abundance),
    sd = sd(Abundance)
  ) %>%
  arrange(plot)

df %>%
  ggboxplot(x = "plot", y = "Abundance", color = "Phylum")
```
```{r}
d

d$plot <- as.factor(d$plot)

d %>%  
  ggboxplot(x = "plot", y = "MAB Abundance")

res.kruskal <- d %>% 
  select(!treatment) %>%
  ungroup() %>% 
  kruskal_test(`MAB Abundance` ~ plot)
res.kruskal

pwc <- d %>% 
  select(!treatment) %>%
  ungroup() %>%
  dunn_test(`MAB Abundance` ~ plot, p.adjust.method = "bonferroni")

pwc


pwc <- pwc %>% add_xy_position(x = "treatment")

d %>%
  ggboxplot(x = "plot", y = "MAB Abundance")  +
  stat_pvalue_manual(pwc, hide.ns = TRUE) +
  labs(
    subtitle = get_test_label(res.kruskal, detailed = TRUE),
    caption = get_pwc_label(pwc)
    )
pwc
```

```{r}
df %>%
  filter(treatment == "Crop + Manure") %>%
  group_by(Phylum, plot) %>%
  get_summary_stats(Abundance, type = "mean_sd") %>%
  arrange(as.factor(plot), -mean) 

df %>%
  filter(treatment == "Crop + Manure") %>%
  group_by(Phylum, plot) %>%
  get_summary_stats(Abundance, type = "mean_sd") %>%
  arrange(-mean)%>%
  ggplot(aes(Phylum, mean, fill = as.factor(plot))) +
  geom_bar(stat = "identity", position = position_dodge()) +
  coord_flip() 

df %>%
  filter(treatment == "Crop + Manure") %>%
  group_by(Phylum) %>%
  tukey_hsd(Abundance ~ as.factor(plot)) %>%
  arrange(desc(group2)) %>%
  filter(p.adj < 0.05)
```

```{r}
df %>%
  filter(treatment == "Crop + Strip + Manure") %>%
  group_by(Phylum) %>%
  get_summary_stats(Abundance, type = "mean_sd") %>%
  arrange(-mean)

x <- df %>%
  filter(treatment == "Crop + Strip + Manure") %>%
  group_by(Phylum, plot) %>%
  get_summary_stats(Abundance, type = "mean_sd") %>%
  arrange(as.factor(plot), -mean) 
x
df %>%
  filter(treatment == "Crop + Strip + Manure") %>%
  group_by(Phylum, plot) %>%
  get_summary_stats(Abundance, type = "mean_sd") %>%
  arrange(-mean)%>%
  ggplot(aes(Phylum, mean, fill = as.factor(plot))) +
  geom_bar(stat = "identity", position = position_dodge()) +
  coord_flip()

df %>%
  filter(Phylum == "Firmicutes", treatment == "Crop + Strip + Manure") %>%
  group_by(plot) %>%
  get_summary_stats(Abundance, type = "mean_sd")

df %>%
  filter(Phylum == "Firmicutes", treatment == "Crop + Strip + Manure") %>%
  anova_test(Abundance ~ as.factor(plot))

df %>%
  filter(treatment == "Crop + Strip + Manure") %>%
  group_by(Phylum) %>%
  tukey_hsd(Abundance ~ as.factor(plot)) %>%
  filter(group1 == 4, p.adj < 0.05) %>%
  arrange(group1) %>%
  distinct(Phylum)

```

Plot without the taxa detected in the non-manured strip

```{r}
plot <- phylogeny_profile(cleanwater, classification = 'ASV_Association', treatment = c("treatment"), merge = TRUE, relative_abundance = TRUE) +
  facet_nested(. ~ treatment + plot, scales = "free", space = "free") +
  theme(legend.position = "top",
             axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))

data <- plot$data %>%
  separate(col = unique_id, into = c("p", "time"), sep = "-")

plot

levels(data$treatment) <- c("Crop + Manure", "Crop + Strip + Manure", "Crop + Strip")

data$time <- as.factor(data$time)

levels(data$time) <- c("2.5", "7.5", "12.5", "17.5", "22.5", "27.5")
data$treatment_f <- factor(data$treatment, levels = c("Crop + Strip", "Crop + Strip + Manure", "Crop + Manure"))

ggplot(data = data, aes(x = time, y = Abundance)) +
  geom_bar(stat = "identity", aes(fill = ASV_Association)) + 
  facet_nested(. ~ treatment_f + plot, scales = "free", space = "free") +
  theme_classic() +
  theme(
    legend.position = "top", 
    panel.background = element_rect(color = 'black', size = 1.4),
    strip.text.x = element_text(size = 10, face = 'bold'),
    strip.background = element_rect(colour = 'black', size = 1.4),
    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))  +
    labs(x = "Sample time (min) after runoff", y = "Relative abundance", fill = "ASV \nAssociation")
```

Most of these are from Firmicutes, and Proteobacteria and many have very low abundance.

```{r}
data
```

# MAB stats

# Water

```{r}
df <- as_tibble(data) %>%
  select(Abundance, treatment, plot, ASV_Association, time) %>%
  filter(ASV_Association == "MAB")

df$plot <- as.factor(df$plot)
df$time <- as.factor(df$time)
df$treatment <- as.factor(df$treatment)

glimpse(df)
```

```{r}
df %>% 
  group_by(treatment) %>%
  identify_outliers(Abundance)
```

```{r}
# Build the linear model
model  <- lm(Abundance ~ treatment, data = df)
# Create a QQ plot of residuals
ggqqplot(residuals(model))
```

```{r}
# Compute Shapiro-Wilk test of normality
shapiro_test(residuals(model))
```

Not normally distributed

```{r}
df %>%
  group_by(treatment) %>%
  get_summary_stats(Abundance, type = "mean_sd") 


p <- ggboxplot(df, x = "treatment", y = "Abundance")

p 
```

```{r}
df %>%
  levene_test(Abundance ~ treatment*plot)
# Not equal variance, welch test won't work becuase there is no variance in the no manure plot
plot(model, 1)
```

# Treatment Stats

Overall impact of treatment on the relative abundance of MAB. Significantly greater in manured treatments, no significant difference between manured treatments. Bar plot suggests that we should compare plots.

```{r}
res.aov <- df %>%
  anova_test(Abundance ~ treatment)
res.aov
pwc <- df %>%
  tukey_hsd(Abundance ~ treatment)
pwc

pwc <- pwc %>% add_xy_position(x = "treatment")
ggboxplot(df, x = "treatment", y = "Abundance") +
  stat_pvalue_manual(pwc, hide.ns = TRUE) +
  labs(
    subtitle = get_test_label(res.aov, detailed = TRUE),
    caption = get_pwc_label(pwc)
    )
```

# Remove plot 4 and 9

```{r}
res.aov <- df %>%
  filter(!treatment == "Crop + Strip", !plot %in% c(4,9)) %>%
  anova_test(Abundance ~ treatment)
res.aov

pwc <- df %>%
  filter(!treatment == "Crop + Strip", !plot %in% c(4,9)) %>%
  tukey_hsd(Abundance ~ treatment)
pwc

pwc <- pwc %>% add_xy_position(x = "treatment")
ggboxplot(filter(df, !treatment == "Crop + Strip", !plot %in% c(4,9)), x = "treatment", y = "Abundance") +
  stat_pvalue_manual(pwc, hide.ns = TRUE) +
  labs(
    subtitle = get_test_label(res.aov, detailed = TRUE),
    caption = get_pwc_label(pwc)
    )
pwc

df %>%
  filter(!treatment == "Crop + Strip", !plot %in% c(4,9)) %>%
  group_by(treatment) %>%
  get_summary_stats(Abundance, type = "mean_sd")
```

```{r}
model <- lm(Abundance ~ plot, data = df)
ggqqplot(residuals(model))
hist(df$Abundance, breaks = 51)

test <- df %>%
anova_test(Abundance ~ plot)

test

pwc <- df %>%
  tukey_hsd(Abundance ~ plot)
pwc

pwc2 <- pwc %>% add_xy_position(x = "plot", step.increase = 1)
ggboxplot(df, x = "plot", y = "Abundance") +
  stat_pvalue_manual(pwc2, hide.ns = TRUE) +
  labs(
    subtitle = get_test_label(test, detailed = TRUE),
    caption = get_pwc_label(pwc2)
    )
ggsave(filename = "plots/MABpairwiseboxplot.png", device = "png", width = 6.5, height = 9, units = "in")

stats <- pwc %>% 
  mutate(across(c(estimate, conf.low, conf.high), round, digits = 3)) %>%
  rename(Plot = group1, Plot_comparision = group2)
stats
write_csv(stats, file = "data/MABabundstats.csv")
```

# Two way ANOVA

Treatment \* Plot

```{r}
df

df %>%
  group_by(treatment, plot) %>%
  get_summary_stats(Abundance, type = "mean_sd")
```

```{r}
bxp <- ggboxplot(
  df, x = "treatment", y = "Abundance",
  color = "plot", palette = "jco"
  )
bxp
```

```{r}
df %>%
  group_by(treatment, plot) %>%
  identify_outliers(Abundance)
```

```{r}
# Build the linear model
model  <- lm(Abundance ~ treatment*plot,
             data = df)
# Create a QQ plot of residuals
ggqqplot(residuals(model))
shapiro_test(residuals(model))

ggqqplot(df, "Abundance", ggtheme = theme_bw()) +
  facet_grid(treatment ~ plot)
```

```{r}
res.aov <- df %>% anova_test(Abundance ~ treatment * plot)
res.aov
```

```{r}
tax_association <- tax_table(allsoil) %>%
  data.frame() %>%
  rownames_to_column("ASV") %>%
  mutate(ASV_Association = ifelse(ASV %in% worle_manure_persitors, "MAB","SAB")) %>%
  mutate(asv = ASV) %>%
  column_to_rownames("ASV") %>%
  rename(ASV = asv) %>%
  as.matrix() 

tax_table(allsoil) <- tax_association

df <- data.frame(sample_data(allsoil))

df <- df %>%
  unite(P_D_S, c("plot", "sample_day", "soil_type")) 

df$treatment <- as.factor(df$treatment)
df$unique_id <- as.factor(df$unique_id)

sample_data(allsoil) <- sample_data(df)

glimpse(sample_data(allsoil))

mergedsoil <- merge_samples(allsoil, "P_D_S")

colnames(mergedsoil@tax_table)
plot <- phylogeny_profile(mergedsoil, relative_abundance = T, classification = "ASV_Association")
plot
```

```{r}
data <- plot$data %>%
  select(Sample, ASV_Association, Abundance) %>%
  separate(Sample, c("Plot", "Day", "Soil")) %>%
  mutate(Treatment = case_when(
    Plot %in% c(1,2,3) ~ "Crop + Strip",
    Plot %in% c(4,5,6) ~ "Crop + Strip + Manure", 
    Plot %in% c(7,8,9) ~ "Crop + Manure"))
data %>%
  pivot_wider(names_from = ASV_Association, values_from = Abundance)

data %>%
  filter(Treatment %in% c("Crop + Manure", "Crop + Strip + Manure"), Soil == "crop", ASV_Association == "MAB") %>%
  arrange(Plot, Day) %>%
  write_csv("data/MABSinCrop.CSV")

data %>%
  filter(Treatment %in% c("Crop + Strip + Manure", "Crop + Strip"), Soil == "strip", ASV_Association == "MAB") %>%
  arrange(Plot, Day) %>%
  write_csv("data/MABSinStrip.CSV")
```

```{r}
ggplot(data = data, aes(x = Day, y = Abundance)) +
  geom_bar(stat = "identity", aes(fill = ASV_Association)) + 
  facet_nested(Soil ~ Treatment + Plot) +
  theme_classic() +
  theme(
    legend.position = "top", 
    panel.background = element_rect(color = 'black', size = 1.4),
    strip.text.x = element_text(size = 10, face = 'bold'),
    strip.background = element_rect(colour = 'black', size = 1.4),
    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
    scale_fill_viridis_d(option = "plasma") +
    labs(x = "Sample day", y = "Relative abundance", fill = "ASV \nAssociation")
```

We can see that the strip portion of the manured_strip plot does not have many taxa from manure. While there is clearly some present in the crop portion.

```{r}
df <- as_tibble(data) %>%
  filter(ASV_Association == "MAB", Treatment %in% c("Crop + Strip + Manure", "Crop + Manure"), Soil %in% c("crop", "border")) %>%
  arrange(Plot)

glimpse(df)

df %>%
  group_by(Plot) %>%
  get_summary_stats(Abundance, type = "mean_sd") 

sum_stats <- df %>%
  group_by(Treatment) %>%
  get_summary_stats(Abundance, type = "mean_sd")

pwc <- df %>%
  anova_test(Abundance ~ Treatment)
sum_stats
pwc
p <- ggboxplot(df, x = "Treatment", y = "Abundance")

p 
```

```{r}
df <- as_tibble(data) %>%
  filter(ASV_Association == "MAB", Treatment %in% c("Crop + Strip + Manure"), Soil %in% c("strip", "crop")) %>%
  arrange(Plot)
df

sum_stats <- df %>%
  group_by(Soil) %>%
  get_summary_stats(Abundance, type = "mean_sd")
sum_stats

pwc <- df %>%
  games_howell_test(Abundance ~ Soil)
pwc

p <- ggboxplot(df, x = "Soil", y = "Abundance")
p 
```
