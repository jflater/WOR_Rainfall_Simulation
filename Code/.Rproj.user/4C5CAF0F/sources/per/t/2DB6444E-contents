---
title: "Poultry manure fertilizer and simulated raifall"
author: "Jared Flater"
date: "2/15/2021"
output:
  html_document:
    toc: true
    toc_float:
      collapsed: true
      smooth_scroll: false
---

To run this markdown, be sure that the "biomark-bioinformatics" folder is located in your Documents directory, or change the directory to the correct folder in the first chunk.


```{r libraries, include=FALSE}
library(tidyverse)
library(ggh4x)
library(viridis)
library(phyloseq)
library(phylosmith)
library(venn)
library(rstatix)
library(ggpubr)
library(kableExtra)
```

# Introduction

This code was used to generate figures for a publication titled: \#\#

The manuscript is available here:

The project was designed to evaluate if the conservation practice of planting strips of prairie grasses within agricultural fields might attenuate the transport of manure associated genes and bacteria.

Poultry manure was applied to small plots appended with prairie strips and rainfall was simulated on the manure applied ground. Runoff water samples were collected after passing through the prairie strip and soil samples were collected before and after the rainfall simulation. In both soil and water samples we looked for and tracked the presence and abundance of manure associated bacteria and genes.

![](images/20171026_090427.jpg)

# Figure 1

Figure was is a taxonomic profile of the bacteria present in the poultry manure that was used as a fertilizer. Manure was applied to six of nine plots, two plots received manure each day of a rainfall simulation. Rainfall simulations were performed on the nine plots over three days, one day each for a block of plots. Each block contained one plot from each treatment. The treatments were:

**Crop + Strip (CS)**

**Crop + Strip + Manure (CSM)**

**Crop + Manure (CM)**

The manure applied to each plot came from a single \~ 60 lbs batch of manure. When manure was applied to each plot, a sample of manure was taken to be analyzed for bacteria and antibiotic resistance genes. To track manure associated bacteria, we must first characterize the bacteria present. Here we have six manure samples and a bar plot representing the relative abundance of bacterial phyla in each sample. This data was generated using NGS sequencing of the 16S gene and analyzed using DADA2 to generate a count of the different taxa present in the various samples from the rainfall simulation.

```{r data import}
worle <- readRDS("../data/Worle_curated.RDS") # Worle data

# set taxa to ASV, otherwise uses the sequence as taxa name
taxa_names(worle) <- paste0("ASV", seq(ntaxa(worle)))

Tax.Table <- data.frame(tax_table(worle)) %>%
  replace(is.na(.), "Unclassified")

head(Tax.Table)

tax_table(worle) <- as.matrix(Tax.Table)
```

```{r subset to manure}
worle.manure <- subset_samples(worle, matrix == "manure") %>%
  filter_taxa(function(x) sum(x) >= 1, T)  # Remove taxa observed less than once in these samples
```

As we make plots of taxa, it's easier to understand if consistent colors are used for the various phyla. We can assign a color to each of these phyla then manually color plots based on this.

```{r phyla colors}
set.seed(010101)
phylalist <- data.frame(tax_table(worle), row.names = NULL) %>%
  select(Phylum) %>%
  unique() 
phylalist$Phylum <- as.character(phylalist$Phylum)


library(colorspace)  # this package will generate a palette based on number and desired colors

colors <- sequential_hcl(n_distinct(phylalist), palette = "viridis") %>%
  setNames(sort(phylalist$Phylum))

head(colors)

```

```{r figure 1 plots}
global_size = 12 # Font size
phydf <- worle.manure %>%
  tax_glom(taxrank = "Phylum") %>%
  transform_sample_counts(function(x) x / sum(x)) %>%
  psmelt()  # Take manure phyloseq object and glom taxa at phyla level. Transform counts to relative abundance and melt to a data frame. 

summary <- phydf %>%  # Make a plot
  group_by(Phylum) %>%
  summarise( 
    n=n(),
    mean=mean(Abundance),
    sd=sd(Abundance)
  ) %>%
  mutate(se = sd/sqrt(n))  %>%
  mutate(ic = se * qt((1-0.05)/2 + .5, n-1)) %>%
  arrange(-mean)

summary$Phylum <- factor(summary$Phylum, levels = summary$Phylum[order(-summary$mean)]) # arrange won't change order of Phylum factor levels

p1 <- ggplot(summary) +
  theme_classic() +
  geom_bar(aes(x = Phylum, y = mean, fill = Phylum), stat = "identity", 
           position = position_dodge(width = 0.75)) +
  geom_errorbar( aes(x = reorder(Phylum, -mean), ymin = mean - ic, ymax = mean + ic), width = 0.2, colour = "black", size= 0.5) +
  labs(y = "Relative abundance of phyla", x = "Phylum") +
  scale_fill_manual(values = colors) +
  theme(legend.position = "none", 
        axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_y_continuous(labels = function(x) paste0(x*100, "%")) +

  theme(text = element_text(size = global_size, family = "Times"))
p1
p2 <- ggplot(subset(summary, Phylum %in% tail(summary$Phylum, -5))) +
  theme_classic() +
  geom_bar(aes(x = reorder(Phylum, -mean), y = mean, fill = Phylum), stat = "identity", 
           position = position_dodge(width = 0.75)) +
  geom_errorbar( aes(x = reorder(Phylum, -mean), ymin = mean - ic, ymax = mean + ic), width = 0.2, colour = "black", size= 0.5) +
  labs(x = NULL, y = NULL) +
  scale_fill_manual(values = colors) +
  theme(legend.position = "none", 
        axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_y_continuous(labels = function(x) paste0(x*100, "%")) +

  theme(text = element_text(size = global_size, family = "Times"))

p2
p3 <- p1 + annotation_custom(ggplotGrob(p2), xmin = "Deinococcus-Thermus", xmax = "Deferribacteres", ymin = .05, ymax = .65) 
p3 
```

We can see that the manure is mostly represented by five phyla, Firmicutes, Proteobacteria, Bacteroidetes, Actinobacetria, and Deinococcus-Thermus.

```{r fig 1 save}
# Use ggsave to save plot. I chose 6.5" wide because most word docs are 8.5" with 2 x 1" margins. Keep the height below 9.5" to save room for a caption. When you insert into your document, change the size to 6.5" wide to ensure that the plot looks visually the same. 

ggsave(filename = "../Figures/Fig1.jpeg", plot = last_plot(), device = "jpeg", width = 7.0, height = 6.0, units = "in", dpi = 350)
```

The specific abundances of phyla are:

```{r}
phydf %>%
  group_by(Phylum) %>%
  summarise(Mean = mean(Abundance), StdDev = sd(Abundance)) %>%
  arrange(-Mean)
```

For a phyla, is there a distribution of Families? Or does a single type of bacteria dominate?

```{r}
phydf <- worle.manure %>%
  transform_sample_counts(function(x) x / sum(x)) %>%
  psmelt()  # Take manure phyloseq object and glom taxa at phyla level. Transform counts to relative abundance and melt to a data frame. 

phydf %>%
  filter(Phylum == "Firmicutes") %>%
  ggplot(aes(x = unique_id, y = Abundance, fill = Family)) +
  geom_bar(stat = "identity") +
  ggtitle("Relative abundance of Firmicutes' families") +
  scale_fill_viridis_d()

phydf %>%
  filter(Family == "Bacillaceae_2") %>%
  ggplot(aes(x = unique_id, y = Abundance, fill = OTU)) +
  geom_bar(stat = "identity") +
  ggtitle("Relative abundance of Bacillaceae_2' genera") +
  scale_fill_viridis_d(na.value="white")

phydf %>%
  filter(Phylum == "Proteobacteria") %>%
  ggplot(aes(x = unique_id, y = Abundance, fill = Family)) +
  geom_bar(stat = "identity") +
  ggtitle("Relative abundance of Proteobacteria' families") +
  scale_fill_viridis_d()

phydf %>%
  filter(Phylum == "Bacteroidetes") %>%
  ggplot(aes(x = unique_id, y = Abundance, fill = Family)) +
  geom_bar(stat = "identity") +
  ggtitle("Relative abundance of Bacteroidetes' Families") +
  scale_fill_viridis_d()

phydf %>%
  filter(Phylum == "Actinobacteria") %>%
  ggplot(aes(x = unique_id, y = Abundance, fill = Family)) +
  geom_bar(stat = "identity") +
  ggtitle("Relative abundance of Actinobacteria' Families") +
  scale_fill_viridis_d()
```

Note the abundance of the Family Bacillaceae_2, \~ 50% of the abundance of several manure samples.

Now let's look at the number of unique taxa in the various samples.

```{r}
# strip subset, all strip soil from baseline samples in addition to no_manure_strip treatment, note the | operator 
worle.strip <- subset_samples(worle, matrix == "soil" & sample_day == "Baseline" & soil_type == "strip" | 
                                matrix == "soil" & treatment == "no_manure_strip" & soil_type == "strip") %>%
  filter_taxa(function(x) sum(x) >= 1, T) 

worle.crop <- subset_samples(worle, matrix == "soil" & sample_day == "Baseline" & soil_type == "crop" | 
                                matrix == "soil" & treatment == "no_manure_strip" & soil_type == "crop") %>%
  filter_taxa(function(x) sum(x) >= 1, T)

worle.border <- subset_samples(worle, matrix == "soil" & sample_day == "Baseline" & soil_type == "border" | 
                                matrix == "soil" & treatment == "no_manure_strip" & soil_type == "border") %>%
  filter_taxa(function(x) sum(x) >= 1, T)

worle.manure <- subset_samples(worle, matrix == "manure") %>%
  filter_taxa(function(x) sum(x) >= 1, T)

worle.water <- subset_samples(worle, matrix == "water" & unique_id != "Comp-from-P8-7-10-26-17") %>%
  filter_taxa(function(x) sum(x) >= 1, T)
```

## Number of taxa

```{r}
# Make a list of ASVs associated with each type of soil and manure
worle_manure_asvs <- taxa_names(worle.manure)
worle_crop_soil_asvs <- taxa_names(worle.crop)
worle_strip_soil_asvs <- taxa_names(worle.strip)
worle_border_asvs <- taxa_names(worle.border)
worle_water_asvs <- taxa_names(worle.water)

# venn diagram
worle_vvv_diag <- venn(list("Manure_ASVs" = worle_manure_asvs, "Crop_ASVs" = worle_crop_soil_asvs, "Strip_ASVs" = worle_strip_soil_asvs, "Border_ASVs" = worle_border_asvs))

# Access ASVs unique to each soil and manure and store
worle_manure_persitors <- attr(worle_vvv_diag, "intersections")$Manure_ASVs
worle_crop_persistors <- attr(worle_vvv_diag, "intersections")$Crop_ASVs
worle_strip_persistors <- attr(worle_vvv_diag, "intersection")$Strip_ASVs
worle_border_persistors <- attr(worle_vvv_diag, "intersections")$Border_ASVs
```

We have 1017 "MAB" taxa

```{r}
Sample_Type <- c("Manure", "Crop", "Strip", "Border")
Number_of_taxa <- c(ntaxa(worle.manure), ntaxa(worle.crop), ntaxa(worle.strip), ntaxa(worle.border))
Taxa_unique_to <- c(length(worle_manure_persitors), length(worle_crop_persistors), length(worle_strip_persistors), length(worle_border_persistors))

df <- data.frame(Sample_Type, Number_of_taxa, Taxa_unique_to)
df
```

Make a taxonomy table of the ASVs unique to manure
```{r}
MAB <- tax_table(worle.manure) %>%
  data.frame() %>%
  rownames_to_column("ASV") %>%
  filter(ASV %in% worle_manure_persitors)
head(MAB)

write.table(MAB, file = "../Tables/MAB.csv", sep = ",", col.names = T,
            qmethod = "double", row.names = F)
```


```{r}
library("ggvenn")
```

```{r}
ggvenn(list("Manure" = worle_manure_asvs, "Crop" = worle_crop_soil_asvs, "Strip" = worle_strip_soil_asvs, "Border" = worle_border_asvs), set_name_size = 4, show_percentage = F) + scale_fill_viridis_d()

ggsave("../Figures/SuppFig2.png", plot = last_plot(), units = "in", width = 6.5, dpi = 300)
```

Now we can assign taxa to two groups, soil associated and manure associated bacteria or "SAB" and "MAB".

```{r}
tax_association <- tax_table(worle.water) %>% 
  data.frame() %>%
  rownames_to_column("ASV") %>%
  mutate(ASV_Association = ifelse(ASV %in% worle_manure_persitors, "MAB","SAB")) %>%
  mutate(asv = ASV) %>%
  column_to_rownames("ASV") %>%
  rename(ASV = asv) %>%
  as.matrix() 

tax_table(worle.water) <- tax_association

```

Now subset water samples to just "MAB".

```{r}
# Due to sequencing depth, we have a few MAB detected in CS plots, let's note them and remove them for "clean" plot. 
ASVsinCS <- subset_samples(worle.water, treatment == "no_manure_strip") %>%
  subset_taxa(ASV_Association == "MAB") %>% 
  psmelt()

ASVsinCS <- ASVsinCS %>%
  filter(Abundance > 0) %>%
  select(OTU, Abundance, Phylum, Class, Order, Family, Genus)

removeASVs <- ASVsinCS$OTU

cleanwater <- subset_taxa(worle.water, !ASV %in% removeASVs)
plot <- phylogeny_profile(cleanwater, relative_abundance = T, classification = "ASV_Association")
plot
# What are the abundances of phyla in the two manured treatment's runoff water?

sp <- cleanwater %>%
  transform_sample_counts(function(x) x / sum(x)) %>%
  subset_taxa(ASV_Association == "MAB")
sp
```

```{r}
p <- phylogeny_profile(cleanwater, classification = 'ASV_Association', treatment = c("treatment"), merge = TRUE, relative_abundance = T) +
  facet_nested(. ~ treatment + plot, scales = "free", space = "free") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
        legend.position = "top") +
  guides(fill = guide_legend(ncol=3)) +
  labs(y = "Relative abundance of MAB") +
  scale_x_discrete()
p
df <- p$data %>%
  separate(col = unique_id, into = c("p", "time"), sep = "-")

levels(df$treatment) <- c("Crop + Manure", "Crop + Strip + Manure", "Crop + Strip")

df$treatment <- ordered(df$treatment, levels = c("Crop + Strip", "Crop + Strip + Manure", "Crop + Manure"))

fp <- ggplot(data = df, aes(x = time, y = Abundance)) +
  geom_bar(stat = "identity", aes(fill = ASV_Association), colour = "black") +
  facet_nested(. ~ treatment + plot, scales = "free", space = "free") +
  theme_classic() +
  theme(
    legend.position = "top",
    panel.background = element_rect(color = 'black', size = 1.4),
    strip.text.x = element_text(size = 10, face = 'bold'),
    strip.background = element_rect(colour = 'black', size = 1.4),
    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
    labs(x = "Sample time (min) after runoff", y = "Relative abundance of MAB", fill = "Phylum") +
  scale_x_discrete(labels = c("1" = "2.5", "2" = "7.5", "3" = "12.5", "4" = "17.5", "5" = "22.5", "6" = "27.5")) +
  guides(fill = guide_legend(nrow = 4))
fp
```

```{r}
p <- phylogeny_profile(sp, classification = 'Phylum', treatment = c("treatment"), merge = TRUE, relative_abundance = F) +
  facet_nested(. ~ treatment + plot, scales = "free", space = "free") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
        legend.position = "top") +
  guides(fill = guide_legend(ncol=3)) +
  labs(y = "Relative abundance of MAB") +
  scale_x_discrete()

df <- p$data %>%
  separate(col = unique_id, into = c("p", "time"), sep = "-") 

levels(df$treatment) <- c("CM", "CSM", "CS")

df$treatment <- ordered(df$treatment, levels = c("CS", "CSM", "CM")) 

breaks <- df %>%
  filter(plot == 4, time == 3) %>%
  group_by(Phylum) %>%
  summarise(mean = mean(Abundance)) %>%
  arrange(mean) %>% 
  select(Phylum) 

df$Phylum <- factor(df$Phylum, levels = breaks$Phylum)

mabbarplot <- ggplot(data = df, aes(x = time, y = Abundance, fill = Phylum)) +
  geom_bar(stat = "identity", colour = "black") +
  facet_nested(. ~ treatment + plot, scales = "free", space = "free") +
  theme_classic() +
  theme(
    text = element_text(size = global_size, family = "Times"),
    legend.position = "top",
    panel.background = element_rect(color = 'black', size = 1.4),
    strip.text.x = element_text(size = 10, face = 'bold'),
    strip.background = element_rect(colour = 'black', size = 1.4),
    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
    scale_fill_manual(aesthetics = "fill", values = subset(colors, names(colors) %in% df$Phylum), breaks = breaks$Phylum) +
    labs(x = "Sample time (min) after runoff", y = "Relative abundance of MAB") +
  scale_x_discrete(labels = c("1" = "2.5", "2" = "7.5", "3" = "12.5", "4" = "17.5", "5" = "22.5", "6" = "27.5")) +
  scale_y_continuous(labels = function(x) paste0(x*100, "%")) +
  guides(fill = guide_legend(nrow = 4))

mabbarplot
```

# Figure 2

The relative abundance of phyla that represent the "MAB" taxa detected in runoff water.

```{r}
ggsave(filename = "../Figures/Fig2.jpeg", plot = last_plot(), device = "jpeg", width = 7, height = 6, units = "in", dpi = 350)
```

# Phyla of MAB in runoff water

Only plot 8 most abundant phyla to keep plot cleaner

```{r}
summary <- df %>%
  filter(!treatment == "CS") %>%
  group_by(Phylum, 
           plot, 
           treatment) %>%
  summarise( 
    n=n(),
    mean=mean(Abundance),
    sd=sd(Abundance)) %>%
  mutate(se = sd/sqrt(n))  %>%
  mutate(ic = se * qt((1-0.05)/2 + .5, n-1)) %>%
  arrange(plot, -mean) %>% 
  ungroup()

EightPhyla <- summary %>%
  group_by(Phylum) %>%
  mutate(mean = mean(mean)) %>%
  arrange(-mean) %>%
  select(Phylum) %>%
  distinct() %>%
  head(8) 

summary$plot <- as.factor(summary$plot)

summary <- summary %>%
  filter(Phylum %in% EightPhyla$Phylum)

ggplot(summary, aes(x = reorder(Phylum, -mean), y = mean, fill = plot)) +
  geom_bar(stat = "identity", 
           position = position_dodge(width = 1)) +
  geom_errorbar(aes(x = reorder(Phylum, -mean), ymin = mean - ic, ymax = mean + ic), 
           position = position_dodge(width = 1), width = 0.2, colour = "black", size= 0.5) +
  labs(y = "Relative abundance of phyla", x = "Phylum") +
  facet_grid( ~ treatment) +
  theme_classic() + 
  theme(text = element_text(size = global_size, family = "Times"),
    axis.text.x = element_text(angle = 90, hjust = 1)) +
  scale_fill_viridis_d(name = "Plot") +
  scale_y_continuous(labels = function(x) paste0(x*100, "%")) # Here we can multiply the relative abundance by 100 and add a % mark, note that any tables generated will still need to be multiplied by 100. 

ggsave(filename = "../Figures/Fig3.jpeg", plot = last_plot(), device = "png", width = 7, height = 6, units = "in", dpi = 350)
```


```{r}
pwc <- df %>%
  filter(treatment == "CSM") %>%
  group_by(Phylum) %>%
  dunn_test(Abundance ~ plot, p.adjust.method = "hochberg") %>%
  filter(group1 == 4, p.adj < 0.05) %>%
  select(Phylum, group1, group2, `Z-value` = statistic, p, p.adj, p.adj.signif) %>%
  unite(col = "Comparison", c(group1, group2), sep = " vs. ") %>%
  mutate_if(is.numeric, round, 4)

pwc

write_excel_csv(pwc, file = "../Data/p4Phylapwcintrt.csv")
```

From runoff from CM, the five most abundant MAB phyla and their relative abundance were:
```{r}
library(scales)
df %>%
  filter(treatment == "CM") %>%
  group_by(Phylum) %>%
  summarise( 
    n=n(),
    mean=mean(Abundance),
    sd=sd(Abundance)) %>%
  mutate(se = sd/sqrt(n))  %>%
  mutate(ic = se * qt((1-0.05)/2 + .5, n-1)) %>%
  ungroup() %>%
  slice_max(order_by = mean, n = 5) %>%
  dplyr::mutate(across(where(is.numeric) & !n,.fns = percent)) %>%
  select(Phylum, mean, sd) 
```

From CSM, the five most abundant MAB phyla were:
```{r}
df %>%
  filter(treatment == "CSM") %>%
  group_by(Phylum) %>%
  summarise( 
    n=n(),
    mean=mean(Abundance),
    sd=sd(Abundance)) %>%
  mutate(se = sd/sqrt(n))  %>%
  mutate(ic = se * qt((1-0.05)/2 + .5, n-1)) %>%
  ungroup() %>%
  slice_max(order_by = mean, n = 5) %>%
  mutate(across(where(is.numeric) & !n, percent)) %>%
  select(Phylum, mean, sd) 
```
```{r}
df %>%
  filter(Phylum == "Bacteroidetes") %>%
  group_by(plot) %>%
  summarise( 
    n=n(),
    mean=mean(Abundance),
    sd=sd(Abundance)) %>%
  mutate(across(where(is.numeric) & !n & !plot, percent))
```


Compare the mean proportion of MAB between water samples from the three treatments.
```{r}
data <- plot$data %>%
  select(Sample, ASV_Association, Abundance) %>%
  separate(Sample, c("Plot", "Time")) %>%
  mutate(Plot = as.factor(gsub("P", "", Plot))) %>%
  mutate(Treatment = case_when(
    Plot %in% c(1,2,3) ~ "Crop + Strip",
    Plot %in% c(4,5,6) ~ "Crop + Strip + Manure", 
    Plot %in% c(7,8,9) ~ "Crop + Manure")) %>%
  pivot_wider(names_from = ASV_Association, values_from = Abundance) %>%
  arrange(Plot, Time)

kbl(data, digits = 5) %>%
  kable_styling(fixed_thead = T) %>%
  scroll_box(width = "100%", height = "500px")
```


```{r}
df <- as_tibble(data)  %>%
  arrange(Plot) %>%
  droplevels()

glimpse(df)

sum_stats <- df %>%
  group_by(Treatment) %>%
  get_summary_stats(MAB, type = "mean_se")

res.kruskal <- df %>%
  kruskal_test(MAB ~ Treatment)

pwc <- df %>%
  dunn_test(MAB ~ Treatment, p.adjust.method = "hochberg", detailed = T)

pwc

pwc <- pwc %>% add_xy_position(x = "Treatment")
sum_stats
df %>%
  ggboxplot(x = "Treatment", y = "MAB") +
  stat_pvalue_manual(pwc, hide.ns = T) +
  labs(
    subtitle = get_test_label(res.kruskal, detailed = TRUE),
    caption = get_pwc_label(pwc)
    ) + geom_point(aes(group = Treatment, color = Plot)) 

pwc %>%
  select(group1, group2, p.adj, p.adj.signif)
identify_outliers(df, MAB)
get_test_label(res.kruskal, detailed = TRUE)
```

A Kruskal-Wallis test indicated that treatment had a significant effect on the mean abundance of MAB in runoff waters, . Further, an outlier test shows that plot 4 MABs are outliers and 3 of 6 are extreme outliers. Whcih is more than 3x the IQR above or below Q3 and Q1, respectively. What if we remove these from analysis and rerun? 

# Stats, no plot 4
```{r}
df <- as_tibble(data)  %>%
  filter(!Plot == 4) %>%
  arrange(Plot) %>%
  droplevels()

glimpse(df)

sum_stats <- df %>%
  group_by(Treatment) %>%
  get_summary_stats(MAB, type = "mean_se")

res.kruskal <- df %>%
  kruskal_test(MAB ~ Treatment)

pwc <- df %>%
  dunn_test(MAB ~ Treatment, p.adjust.method = "hochberg", detailed = T)

pwc

pwc <- pwc %>% add_xy_position(x = "Treatment")
sum_stats
df %>%
  ggboxplot(x = "Treatment", y = "MAB") +
  stat_pvalue_manual(pwc, hide.ns = T) +
  labs(
    subtitle = get_test_label(res.kruskal, detailed = TRUE),
    caption = get_pwc_label(pwc)
    ) + geom_point(aes(group = Treatment, color = Plot)) 

pwc %>%
  select(group1, group2, p.adj, p.adj.signif) %>%
  mutate(P = round(p.adj, digits = 10)) 
```


```{r}
df <- as_tibble(data) %>%
  arrange(Plot) %>%
  droplevels()

glimpse(df)

sum_stats <- df %>%
  group_by(Plot) %>%
  get_summary_stats(MAB, type = "mean_se") 
percent(sum_stats$mean)
sum_stats
percent(sum_stats$mean)
res.kruskal <- df %>%
  kruskal_test(MAB ~ Plot)

pwc <- df %>%
  dunn_test(MAB ~ Plot, p.adjust.method = "hochberg")

pwc

pwc <- pwc %>% add_xy_position(x = "Plot")
sum_stats

df %>%
  ggboxplot(x = "Plot", y = "MAB") +
  stat_pvalue_manual(pwc, hide.ns = T) +
  labs(
    subtitle = get_test_label(res.kruskal, detailed = TRUE),
    caption = get_pwc_label(pwc)
    )
```

# Soil MAB abundance

```{r}
allsoil <- subset_samples(worle, matrix == "soil") %>%
  filter_taxa(function(x) sum(x) >= 1, T)

tax_association <- tax_table(allsoil) %>%
  data.frame() %>%
  rownames_to_column("ASV") %>%
  mutate(ASV_Association = ifelse(ASV %in% worle_manure_persitors, "MAB","SAB")) %>%
  mutate(asv = ASV) %>%
  column_to_rownames("ASV") %>%
  rename(ASV = asv) %>%
  as.matrix() 

tax_table(allsoil) <- tax_association

df <- data.frame(sample_data(allsoil))

df <- df %>%
  unite(P_D_S, c("plot", "sample_day", "soil_type")) 

df$treatment <- as.factor(df$treatment)
df$unique_id <- as.factor(df$unique_id)

sample_data(allsoil) <- sample_data(df)

glimpse(data.frame(sample_data(allsoil)))

mergedsoil <- merge_samples(allsoil, "P_D_S")

colnames(mergedsoil@tax_table)
plot <- phylogeny_profile(mergedsoil, relative_abundance = T, classification = "ASV_Association")
plot
```

```{r}
data <- plot$data %>%
  select(Sample, ASV_Association, Abundance) %>%
  separate(Sample, c("Plot", "Day", "Soil")) %>%
  mutate(Treatment = case_when(
    Plot %in% c(1,2,3) ~ "Crop + Strip",
    Plot %in% c(4,5,6) ~ "Crop + Strip + Manure", 
    Plot %in% c(7,8,9) ~ "Crop + Manure")) %>%
  pivot_wider(names_from = ASV_Association, values_from = Abundance) 

kbl(data, digits = 5) %>%
  kable_styling(fixed_thead = T) %>%
  scroll_box(width = "100%", height = "500px")
```
# MAB crop vs. strip soil

```{r}
SoilMAB <- data %>%
  filter(Treatment %in% c("Crop + Manure", "Crop + Strip + Manure")) %>%
  group_by(Treatment, Soil) %>%
  summarise( 
    n=n(),
    mean=mean(MAB),
    sd=sd(MAB)
  ) %>%
  mutate(se = sd/sqrt(n))  %>%
  mutate(ic = se * qt((1-0.05)/2 + .5, n-1)) 
SoilMAB

CM_Crop_Mean <- paste(round(SoilMAB[2,4], digits = 6), round(SoilMAB[2,6], digits = 5), sep = " +/- ")
CSM_Crop_Mean <- paste(round(SoilMAB[4,4], digits = 6), round(SoilMAB[4,6], digits = 5), sep = " +/- ")
CSM_Strip_Mean <- paste(round(SoilMAB[5,4], digits = 6), round(SoilMAB[5,6], digits = 5), sep = " +/- ")
```
In plots receiving manure, the mean abundance of MAB in the crop portion of each plot was `r CM_Crop_Mean` and `r CSM_Crop_Mean` in CM and CSM, respectively. While in the strip portion of CSM, the mean MAB abundance was `r CSM_Strip_Mean`. Relatively low abundances of MAB all around. 

```{r}
data %>%
  filter(Treatment %in% c("Crop + Manure", "Crop + Strip + Manure"), Soil == "crop") %>%
  arrange(Plot, Day) %>%
  write_csv("../Data/MABSinCrop.CSV")

data %>%
  filter(Treatment %in% c("Crop + Strip + Manure", "Crop + Strip"), Soil == "strip") %>%
  arrange(Plot, Day) %>%
  write_csv("../Data/MABSinStrip.CSV")
```


```{r}
p <- mergedsoil %>%
  transform_sample_counts(function(x) x / sum(x)) %>%
  subset_taxa(ASV_Association == "MAB")
plot <- phylogeny_profile(p, relative_abundance = F, classification = "Phylum")
plot

data <- plot$data %>%
  select(Sample, Phylum, Abundance) %>%
  separate(Sample, c("Plot", "Day", "Soil")) %>%
  mutate(Treatment = case_when(
    Plot %in% c(1,2,3) ~ "Crop + Strip",
    Plot %in% c(4,5,6) ~ "Crop + Strip + Manure", 
    Plot %in% c(7,8,9) ~ "Crop + Manure")) 

levels(data$Treatment) <- c("Crop + Manure", "Crop + Strip + Manure", "Crop + Strip")

data$Treatment <- ordered(data$Treatment, levels = c("Crop + Strip", "Crop + Strip + Manure", "Crop + Manure"))

ggplot(data, aes(x = Day, y = Abundance, fill = Phylum)) +
  geom_bar(stat = "identity") + 
  facet_nested(factor(Soil, levels = c("crop", "border", "strip")) ~ Treatment + Plot) +
  theme_classic() +
  theme(
    legend.position = "top", 
    panel.background = element_rect(color = 'black', size = 1.4),
    strip.text.x = element_text(size = 10, face = 'bold'),
    strip.background = element_rect(colour = 'black', size = 1.4),
    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
    scale_color_manual(aesthetics = "fill", values = subset(colors, names(colors) %in% data$Phylum)) +
    labs(x = "Sample day", y = "Relative abundance", fill = "ASV \nAssociation") +
  guides(fill = guide_legend(nrow = 3))

ggsave(filename = "../Figures/manuretaxainsoil.png", plot = last_plot(), device = "png", width = 6.5, height = 7.5, units = "in", dpi = 350)
```


We can see that the strip portion of the manured_strip plot does not have many taxa from manure. While there is clearly some present in the crop portion.

Compare crop to crop from the two manured treatments

```{r}
df <- as_tibble(data) %>%
  filter(Treatment %in% c("Crop + Strip + Manure", "Crop + Manure"), Soil %in% c("crop")) %>%
  arrange(Plot)

glimpse(df)

sum_stats <- df %>%
  group_by(Treatment) %>%
  get_summary_stats(Abundance, type = "mean_se")

res.kruskal <- df %>%
  kruskal_test(Abundance ~ Treatment)

pwc <- df %>%
  dunn_test(Abundance ~ Treatment)

pwc

pwc <- pwc %>% add_xy_position(x = "Treatment")
sum_stats
df %>%
  ggboxplot(x = "Treatment", y = "Abundance") +
  stat_pvalue_manual(pwc, hide.ns = T) +
  labs(
    subtitle = get_test_label(res.kruskal, detailed = TRUE),
    caption = get_pwc_label(pwc)
    )
```

```{r}
df <- as_tibble(data) %>%
  filter(Treatment %in% c("Crop + Strip + Manure"), Soil %in% c("strip", "crop")) %>%
  arrange(Plot)
df

sum_stats <- df %>%
  group_by(Soil) %>%
  get_summary_stats(Abundance, type = "mean_se")
sum_stats

res.kruskal <- df %>%
  kruskal_test(Abundance ~ Soil)

pwc <- df %>%
  dunn_test(Abundance ~ Soil, p.adjust.method = "hochberg")

pwc

pwc <- pwc %>% add_xy_position(x = "Soil")
sum_stats
df %>%
  ggboxplot(x = "Soil", y = "Abundance") +
  stat_pvalue_manual(pwc, hide.ns = T) +
  labs(
    subtitle = get_test_label(res.kruskal, detailed = TRUE),
    caption = get_pwc_label(pwc)
    ) +
  ggtitle("Abundance of MAB compared between strip and crop \nfrom the Crop + Strip + Manure treatment")
```

# MAB abundance vs water flow

If we plot MAB vs. flow, do prairie strips have an impact? 

```{r}
library(readxl)
fp$data

flow <- read_excel("../Data/WOR_Water_flow.xlsx")

glimpse(flow)

flow$sample_number <- as.character(flow$sample_number)

df <- fp$data %>%
  rename(sample_number = time) %>%
  filter(ASV_Association == "MAB") %>%
  left_join(flow, by = c("plot", "sample_number")) %>%
  select(treatment.x, plot, sample_number, Abundance, time_after_runoff_start, collection_time_sec, jare_tare_wt_g, jare_plus_runoff_wt_g, `flow_g/s`)

write_excel_csv(df, file = "../Data/water_flow_with_MAB.csv")

lmplot <- df %>%
  filter(!treatment.x == "Crop + Strip") %>%
  ggplot(aes(x = `flow_g/s`, y = Abundance, color = treatment.x)) +
  geom_point() +
  geom_smooth(method = lm, se = FALSE)  +
  scale_color_manual(values = c("darkgreen", "tan4"), name = "Treatment") +
  theme_bw()

lmplot
```

```{r}
# Two seperate lm's to calculated where they intersect
CM <- df %>%
  filter(!treatment.x %in% c("Crop + Strip", "Crop + Strip + Manure")) %>%
  lm(Abundance ~ `flow_g/s`, data = .)
summary(CM)$r.squared
summary(CM)$adj.r.squared

CSM <- df %>%
  filter(!treatment.x %in% c("Crop + Strip", "Crop + Manure")) %>%
  lm(Abundance ~ `flow_g/s`, data = .)
summary(CSM)$r.squared
summary(CSM)$adj.r.squared

# where do the two lines intersect? 
cm <- rbind(coef(CM),coef(CSM)) # Coefficient matrix
c(-solve(cbind(cm[,2],-1)) %*% cm[,1])

lmplot <- df %>%
  filter(!treatment.x == "Crop + Strip") %>%
  ggplot(aes(x = `flow_g/s`, y = Abundance, color = treatment.x)) +
  geom_point() +
  geom_smooth(method = lm, se = FALSE) +
  geom_point(x = 7.373952, y = 0.286310, color = "black") +
  annotate("text", x = 8.1, y = 0.24, label = "7.37 (mL/s)") +
  stat_cor(aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")), 
    label.x = 3, show.legend = F) +
  labs(x = "Flow (mL/s)", y = "Relative abundance (%)") +
  scale_y_continuous(labels = function(x) paste0(x*100, "%")) +
  annotate("segment", x = 7.373952, xend = 7.6, y = 0.286310, yend = 0.26,
  colour = "black") +
  scale_color_manual(name = "Treatment", labels = c("CSM", "CM"), values = c("darkgreen", "tan4")) +
  theme_bw() 

lmplot
ggsave(filename = "../Figures/SupFig6.png", plot = last_plot(), device = "png", width = 6.5, height = 7.5, units = "in", dpi = 350)
```
```{r}

ggplot(flow, aes(x = as.factor(sample_number), y = `flow_g/s`, group = as.factor(plot))) +
  geom_line(position = position_dodge(width = .3)) +
  geom_point(aes(color = as.factor(treatment)), position = position_dodge(width = .3), size = 5) +
  geom_text(aes(label = plot), position = position_dodge(width = .3), show.legend = F) +
  theme_classic() +
  theme(
    legend.position = "top", 
    panel.background = element_rect(color = 'black', size = 1.4),
    strip.text.x = element_text(size = 10, face = 'bold'),
    strip.background = element_rect(colour = 'black', size = 1.4),
    axis.text.x = element_text(angle = 0, vjust = 0, hjust = 0.5)) +
    scale_color_viridis_d() +
    labs(x = "Time after runoff start (min)", y = "Flow (mL/s)", color = "Treatment \n(points labeled with plot)") +
    scale_x_discrete(labels = c("1" = "2.5", "2" = "7.5", "3" = "12.5", "4" = "17.5", "5" = "22.5", "6" = "27.5"))

ggsave(filename = "../Figures/SupFig4", plot = last_plot(), device = "png", width = 6.5, height = 7.5, units = "in", dpi = 350)
```

```{r}
data <- df %>%
  filter(!treatment.x == "Crop + Strip") %>%
  mutate(cor = Abundance / `flow_g/s`) %>%# Make a plot
  group_by(treatment.x, time_after_runoff_start) %>%
  summarise( 
    n=n(),
    mean=mean(cor),
    sd=sd(cor)
  ) %>%
  mutate(se = sd/sqrt(n))  %>%
  mutate(ic = se * qt((1-0.05)/2 + .5, n-1)) 
data

data %>%
  ggplot(aes(x = time_after_runoff_start, 
             y = mean, 
             ymin = mean - ic, 
             ymax = mean + ic,
             color = treatment.x,
             group = treatment.x)) +
  geom_point(position = position_dodge(width = 1), size = 2) +
  geom_line(position = position_dodge(width = 1), size = 2) +
  geom_errorbar(position = position_dodge(width = 1), width = .8) +
  labs(y = "Mean MAB / flow", x = "Time", title = "Flow weighted", subtitle = "Divide MAB relative abundance by flow") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_color_manual(values = c("darkgreen", "tan4"), name = "Treatment") +
  theme_bw()
```

Plot 4 flow rate was higher, calculate plotwise mean

```{r}
df %>%
  group_by(plot, treatment.x) %>%
  summarise(mean = mean(`flow_g/s`)) %>%
  mutate(fc = 8.8773369 / mean) # fold change of 4 with respect to other
```

