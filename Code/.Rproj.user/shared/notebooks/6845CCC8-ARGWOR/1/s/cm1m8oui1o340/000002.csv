"0","df <- SixS %>%"
"0","  filter(!rep %in% c(4,5,6)) %>%"
"0","  drop_na() %>%"
"0","  droplevels() "
"0",""
"0","pd <- df %>%"
"0","  group_by(sample_number, treatment) %>%"
"0","  dplyr::summarise("
"0","    n = n(),"
"0","    mean = mean(counts),"
"0","    sd = sd(counts)"
"0","    ) %>%"
"0","  mutate(se = sd/sqrt(n))  %>%"
"0","  mutate(ic = se * qt((1-0.05)/2 + .5, n-1))"
"1","`summarise()` has grouped output by 'sample_number'. You can override using the `.groups` argument.
"
"0","siglabel <- df %>%"
"0","  group_by(sample_number) %>%"
"0","  dunn_test(counts ~ treatment, p.adjust.method = ""hochberg"") %>%"
"0","  filter(p.adj < 0.05) %>%"
"0","  rstatix::add_significance(""p"") %>%"
"0","  rstatix::add_xy_position() "
"0",""
"0","ggplot(pd, aes(x = treatment, y = mean)) + geom_bar(stat = ""identity"") +"
"0","  geom_errorbar( aes(x = treatment, ymin = mean - ic, ymax = mean + ic), width = 0.2, colour = ""black"", size= 0.5) +"
"0","  ggpubr::stat_pvalue_manual(siglabel, label = ""p.signif"") +"
"0","  facet_grid(. ~ sample_number) "
