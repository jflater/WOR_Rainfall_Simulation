"0",""
"0",""
"0","get_counts <- function(stddf, ctdf, gene){"
"0","  # stddf <- stds # use to test"
"0","  # ctdf <- SoilCT # use to test"
"0","  # gene <- ""tetM"" # use to test"
"0","  std <- stddf %>%"
"0","    filter(Assay == gene)"
"0","  ctd <- ctdf %>%"
"0","    filter(Assay == gene)"
"0","  inverse.lm <- lm(data = std, formula = log10(counts+1) ~ as.numeric(Value)) # Note log10 transformation"
"0","  "
"0","  val2 <- ctd$Value"
"0","  "
"0","  ctd$counts <- 10 ^ predict(inverse.lm ,data.frame(Value = val2), interval = ""predict"")[,1] "
"0","  return(ctd)"
"0","}"
