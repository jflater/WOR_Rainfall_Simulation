position = position_dodge(width = 0.75)) +
geom_errorbar( aes(x = reorder(Phylum, -mean), ymin = mean - ic, ymax = mean + ic), width = 0.2, colour = "black", size= 0.5) +
labs(y = "Relative abundance of phyla", x = "Phylum") +
scale_fill_manual(values = colors) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = function(x) paste0(x*100, "%")) +
theme(text = element_text(size = global_size, family = "Times"))
p1
p2 <- ggplot(subset(summary, Phylum %in% tail(summary$Phylum, -5))) +
theme_classic() +
geom_bar(aes(x = reorder(Phylum, -mean), y = mean, fill = Phylum), stat = "identity",
position = position_dodge(width = 0.75)) +
geom_errorbar( aes(x = reorder(Phylum, -mean), ymin = mean - ic, ymax = mean + ic), width = 0.2, colour = "black", size= 0.5) +
labs(x = NULL, y = NULL) +
scale_fill_manual(values = colors) +
theme(legend.position = "none",
axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_y_continuous(labels = function(x) paste0(x*100, "%")) +
theme(text = element_text(size = global_size, family = "Times"))
p2
p3 <- p1 + annotation_custom(ggplotGrob(p2), xmin = "Deinococcus-Thermus", xmax = "Deferribacteres", ymin = .05, ymax = .65)
p3
# Use ggsave to save plot. I chose 6.5" wide because most word docs are 8.5" with 2 x 1" margins. Keep the height below 9.5" to save room for a caption. When you insert into your document, change the size to 6.5" wide to ensure that the plot looks visually the same.
ggsave(filename = "../Figures/Fig1.jpeg", plot = last_plot(), device = "jpeg", width = 7.0, height = 6.0, units = "in", dpi = 350)
phydf %>%
group_by(Phylum) %>%
summarise(Mean = mean(Abundance), StdDev = sd(Abundance)) %>%
arrange(-Mean)
phydf <- worle.manure %>%
transform_sample_counts(function(x) x / sum(x)) %>%
psmelt()  # Take manure phyloseq object and glom taxa at phyla level. Transform counts to relative abundance and melt to a data frame.
phydf %>%
filter(Phylum == "Firmicutes") %>%
ggplot(aes(x = unique_id, y = Abundance, fill = Family)) +
geom_bar(stat = "identity") +
ggtitle("Relative abundance of Firmicutes' families") +
scale_fill_viridis_d()
phydf %>%
filter(Family == "Bacillaceae_2") %>%
ggplot(aes(x = unique_id, y = Abundance, fill = OTU)) +
geom_bar(stat = "identity") +
ggtitle("Relative abundance of Bacillaceae_2' genera") +
scale_fill_viridis_d(na.value="white")
phydf %>%
filter(Phylum == "Proteobacteria") %>%
ggplot(aes(x = unique_id, y = Abundance, fill = Family)) +
geom_bar(stat = "identity") +
ggtitle("Relative abundance of Proteobacteria' families") +
scale_fill_viridis_d()
phydf %>%
filter(Phylum == "Bacteroidetes") %>%
ggplot(aes(x = unique_id, y = Abundance, fill = Family)) +
geom_bar(stat = "identity") +
ggtitle("Relative abundance of Bacteroidetes' Families") +
scale_fill_viridis_d()
phydf %>%
filter(Phylum == "Actinobacteria") %>%
ggplot(aes(x = unique_id, y = Abundance, fill = Family)) +
geom_bar(stat = "identity") +
ggtitle("Relative abundance of Actinobacteria' Families") +
scale_fill_viridis_d()
# strip subset, all strip soil from baseline samples in addition to no_manure_strip treatment, note the | operator
worle.strip <- subset_samples(worle, matrix == "soil" & sample_day == "Baseline" & soil_type == "strip" |
matrix == "soil" & treatment == "no_manure_strip" & soil_type == "strip") %>%
filter_taxa(function(x) sum(x) >= 1, T)
worle.crop <- subset_samples(worle, matrix == "soil" & sample_day == "Baseline" & soil_type == "crop" |
matrix == "soil" & treatment == "no_manure_strip" & soil_type == "crop") %>%
filter_taxa(function(x) sum(x) >= 1, T)
worle.border <- subset_samples(worle, matrix == "soil" & sample_day == "Baseline" & soil_type == "border" |
matrix == "soil" & treatment == "no_manure_strip" & soil_type == "border") %>%
filter_taxa(function(x) sum(x) >= 1, T)
worle.manure <- subset_samples(worle, matrix == "manure") %>%
filter_taxa(function(x) sum(x) >= 1, T)
worle.water <- subset_samples(worle, matrix == "water" & unique_id != "Comp-from-P8-7-10-26-17") %>%
filter_taxa(function(x) sum(x) >= 1, T)
# Make a list of ASVs associated with each type of soil and manure
worle_manure_asvs <- taxa_names(worle.manure)
worle_crop_soil_asvs <- taxa_names(worle.crop)
worle_strip_soil_asvs <- taxa_names(worle.strip)
worle_border_asvs <- taxa_names(worle.border)
worle_water_asvs <- taxa_names(worle.water)
# venn diagram
worle_vvv_diag <- venn(list("Manure_ASVs" = worle_manure_asvs, "Crop_ASVs" = worle_crop_soil_asvs, "Strip_ASVs" = worle_strip_soil_asvs, "Border_ASVs" = worle_border_asvs))
# Access ASVs unique to each soil and manure and store
worle_manure_persitors <- attr(worle_vvv_diag, "intersections")$Manure_ASVs
worle_crop_persistors <- attr(worle_vvv_diag, "intersections")$Crop_ASVs
worle_strip_persistors <- attr(worle_vvv_diag, "intersection")$Strip_ASVs
worle_border_persistors <- attr(worle_vvv_diag, "intersections")$Border_ASVs
Sample_Type <- c("Manure", "Crop", "Strip", "Border")
Number_of_taxa <- c(ntaxa(worle.manure), ntaxa(worle.crop), ntaxa(worle.strip), ntaxa(worle.border))
Taxa_unique_to <- c(length(worle_manure_persitors), length(worle_crop_persistors), length(worle_strip_persistors), length(worle_border_persistors))
df <- data.frame(Sample_Type, Number_of_taxa, Taxa_unique_to)
df
MAB <- tax_table(worle.manure) %>%
data.frame() %>%
rownames_to_column("ASV") %>%
filter(ASV %in% worle_manure_persitors)
head(MAB)
write.table(MAB, file = "../Tables/MAB.csv", sep = ",", col.names = T,
qmethod = "double", row.names = F)
library("ggvenn")
ggvenn(list("Manure" = worle_manure_asvs, "Crop" = worle_crop_soil_asvs, "Strip" = worle_strip_soil_asvs, "Border" = worle_border_asvs), set_name_size = 4, show_percentage = F) + scale_fill_viridis_d()
ggsave("../Figures/SuppFig2.png", plot = last_plot(), units = "in", width = 6.5, dpi = 300)
tax_association <- tax_table(worle.water) %>%
data.frame() %>%
rownames_to_column("ASV") %>%
mutate(ASV_Association = ifelse(ASV %in% worle_manure_persitors, "MAB","SAB")) %>%
mutate(asv = ASV) %>%
column_to_rownames("ASV") %>%
rename(ASV = asv) %>%
as.matrix()
tax_table(worle.water) <- tax_association
# Due to sequencing depth, we have a few MAB detected in CS plots, let's note them and remove them for "clean" plot.
ASVsinCS <- subset_samples(worle.water, treatment == "no_manure_strip") %>%
subset_taxa(ASV_Association == "MAB") %>%
psmelt()
ASVsinCS <- ASVsinCS %>%
filter(Abundance > 0) %>%
select(OTU, Abundance, Phylum, Class, Order, Family, Genus)
removeASVs <- ASVsinCS$OTU
cleanwater <- subset_taxa(worle.water, !ASV %in% removeASVs)
plot <- phylogeny_profile(cleanwater, relative_abundance = T, classification = "ASV_Association")
plot
# What are the abundances of phyla in the two manured treatment's runoff water?
sp <- cleanwater %>%
transform_sample_counts(function(x) x / sum(x)) %>%
subset_taxa(ASV_Association == "MAB")
sp
# p <- phylogeny_profile(cleanwater, classification = 'ASV_Association', treatment = c("treatment"), merge = TRUE, relative_abundance = T) +
#   facet_nested(. ~ treatment + plot, scales = "free", space = "free") +
#   theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
#         legend.position = "top") +
#   guides(fill = guide_legend(ncol=3)) +
#   labs(y = "Relative abundance of MAB") +
#   scale_x_discrete()
# p
# df <- p$data %>%
#   separate(col = unique_id, into = c("p", "time"), sep = "-")
#
# levels(df$treatment) <- c("Crop + Manure", "Crop + Strip + Manure", "Crop + Strip")
#
# df$treatment <- ordered(df$treatment, levels = c("Crop + Strip", "Crop + Strip + Manure", "Crop + Manure"))
#
# fp <- ggplot(data = df, aes(x = time, y = Abundance)) +
#   geom_bar(stat = "identity", aes(fill = ASV_Association), colour = "black") +
#   facet_nested(. ~ treatment + plot, scales = "free", space = "free") +
#   theme_classic() +
#   theme(
#     legend.position = "top",
#     panel.background = element_rect(color = 'black', size = 1.4),
#     strip.text.x = element_text(size = 10, face = 'bold'),
#     strip.background = element_rect(colour = 'black', size = 1.4),
#     axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
#     labs(x = "Sample time (min) after runoff", y = "Relative abundance of MAB", fill = "Phylum") +
#   scale_x_discrete(labels = c("1" = "2.5", "2" = "7.5", "3" = "12.5", "4" = "17.5", "5" = "22.5", "6" = "27.5")) +
#   guides(fill = guide_legend(nrow = 4))
# fp
p <- phylogeny_profile(sp, classification = 'Phylum', treatment = c("treatment"), merge = TRUE, relative_abundance = F) +
facet_nested(. ~ treatment + plot, scales = "free", space = "free") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
legend.position = "top") +
guides(fill = guide_legend(ncol=3)) +
labs(y = "Relative abundance of MAB") +
scale_x_discrete()
df <- p$data %>%
separate(col = unique_id, into = c("p", "time"), sep = "-")
levels(df$treatment) <- c("CM", "CSM", "CS")
df$treatment <- ordered(df$treatment, levels = c("CS", "CSM", "CM"))
breaks <- df %>%
filter(plot == 4, time == 3) %>%
group_by(Phylum) %>%
summarise(mean = mean(Abundance)) %>%
arrange(mean) %>%
select(Phylum)
df$Phylum <- factor(df$Phylum, levels = breaks$Phylum)
mabbarplot <- ggplot(data = df, aes(x = time, y = Abundance, fill = Phylum)) +
geom_bar(stat = "identity", colour = "black") +
facet_nested(. ~ treatment + plot, scales = "free", space = "free") +
theme_classic() +
theme(
text = element_text(size = global_size, family = "Times"),
legend.position = "top",
panel.background = element_rect(color = 'black', size = 1.4),
strip.text.x = element_text(size = 10, face = 'bold'),
strip.background = element_rect(colour = 'black', size = 1.4),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_fill_manual(aesthetics = "fill", values = subset(colors, names(colors) %in% df$Phylum), breaks = breaks$Phylum) +
labs(x = "Sample time (min) after runoff", y = "Relative abundance of MAB") +
scale_x_discrete(labels = c("1" = "2.5", "2" = "7.5", "3" = "12.5", "4" = "17.5", "5" = "22.5", "6" = "27.5")) +
scale_y_continuous(labels = function(x) paste0(x*100, "%")) +
guides(fill = guide_legend(nrow = 4))
mabbarplot
ggsave(filename = "../Figures/Fig2.jpeg", plot = last_plot(), device = "jpeg", width = 7, height = 6, units = "in", dpi = 350)
summary <- df %>%
filter(!treatment == "CS") %>%
group_by(Phylum,
plot,
treatment) %>%
summarise(
n=n(),
mean=mean(Abundance),
sd=sd(Abundance)) %>%
mutate(se = sd/sqrt(n))  %>%
mutate(ic = se * qt((1-0.05)/2 + .5, n-1)) %>%
arrange(plot, -mean) %>%
ungroup()
EightPhyla <- summary %>%
group_by(Phylum) %>%
mutate(mean = mean(mean)) %>%
arrange(-mean) %>%
select(Phylum) %>%
distinct() %>%
head(8)
summary$plot <- as.factor(summary$plot)
summary <- summary %>%
filter(Phylum %in% EightPhyla$Phylum)
ggplot(summary, aes(x = reorder(Phylum, -mean), y = mean, fill = plot)) +
geom_bar(stat = "identity",
position = position_dodge(width = 1)) +
geom_errorbar(aes(x = reorder(Phylum, -mean), ymin = mean - ic, ymax = mean + ic),
position = position_dodge(width = 1), width = 0.2, colour = "black", size= 0.5) +
labs(y = "Relative abundance of phyla", x = "Phylum") +
facet_grid( ~ treatment) +
theme_classic() +
theme(text = element_text(size = global_size, family = "Times"),
axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_fill_viridis_d(name = "Plot") +
scale_y_continuous(labels = function(x) paste0(x*100, "%")) # Here we can multiply the relative abundance by 100 and add a % mark, note that any tables generated will still need to be multiplied by 100.
ggsave(filename = "../Figures/Fig3.jpeg", plot = last_plot(), device = "png", width = 7, height = 6, units = "in", dpi = 350)
pwc <- df %>%
filter(treatment == "CSM") %>%
group_by(Phylum) %>%
dunn_test(Abundance ~ plot, p.adjust.method = "hochberg") %>%
filter(group1 == 4, p.adj < 0.05) %>%
select(Phylum, group1, group2, `Z-value` = statistic, p, p.adj, p.adj.signif) %>%
unite(col = "Comparison", c(group1, group2), sep = " vs. ") %>%
mutate_if(is.numeric, round, 4)
pwc
write_excel_csv(pwc, file = "../Data/p4Phylapwcintrt.csv")
library(scales)
df %>%
filter(treatment == "CM") %>%
group_by(Phylum) %>%
summarise(
n=n(),
mean=mean(Abundance),
sd=sd(Abundance)) %>%
mutate(se = sd/sqrt(n))  %>%
mutate(ic = se * qt((1-0.05)/2 + .5, n-1)) %>%
ungroup() %>%
slice_max(order_by = mean, n = 5) %>%
dplyr::mutate(across(where(is.numeric) & !n,.fns = percent)) %>%
select(Phylum, mean, sd)
df %>%
filter(treatment == "CSM") %>%
group_by(Phylum) %>%
summarise(
n=n(),
mean=mean(Abundance),
sd=sd(Abundance)) %>%
mutate(se = sd/sqrt(n))  %>%
mutate(ic = se * qt((1-0.05)/2 + .5, n-1)) %>%
ungroup() %>%
slice_max(order_by = mean, n = 5) %>%
mutate(across(where(is.numeric) & !n, percent)) %>%
select(Phylum, mean, sd)
df %>%
filter(Phylum == "Bacteroidetes") %>%
group_by(plot) %>%
summarise(
n=n(),
mean=mean(Abundance),
sd=sd(Abundance)) %>%
mutate(across(where(is.numeric) & !n & !plot, percent))
data <- plot$data %>%
select(Sample, ASV_Association, Abundance) %>%
separate(Sample, c("Plot", "Time")) %>%
mutate(Plot = as.factor(gsub("P", "", Plot))) %>%
mutate(Treatment = case_when(
Plot %in% c(1,2,3) ~ "Crop + Strip",
Plot %in% c(4,5,6) ~ "Crop + Strip + Manure",
Plot %in% c(7,8,9) ~ "Crop + Manure")) %>%
pivot_wider(names_from = ASV_Association, values_from = Abundance) %>%
arrange(Plot, Time)
kbl(data, digits = 5) %>%
kable_styling(fixed_thead = T) %>%
scroll_box(width = "100%", height = "500px")
df <- as_tibble(data)  %>%
arrange(Plot) %>%
droplevels()
glimpse(df)
sum_stats <- df %>%
group_by(Treatment) %>%
get_summary_stats(MAB, type = "mean_se")
res.kruskal <- df %>%
kruskal_test(MAB ~ Treatment)
pwc <- df %>%
dunn_test(MAB ~ Treatment, p.adjust.method = "hochberg", detailed = T)
pwc
pwc <- pwc %>% add_xy_position(x = "Treatment")
sum_stats
df %>%
ggboxplot(x = "Treatment", y = "MAB") +
stat_pvalue_manual(pwc, hide.ns = T) +
labs(
subtitle = get_test_label(res.kruskal, detailed = TRUE),
caption = get_pwc_label(pwc)
) + geom_point(aes(group = Treatment, color = Plot))
pwc %>%
select(group1, group2, p.adj, p.adj.signif)
identify_outliers(df, MAB)
get_test_label(res.kruskal, detailed = TRUE)
df <- as_tibble(data)  %>%
filter(!Plot == 4) %>%
arrange(Plot) %>%
droplevels()
glimpse(df)
sum_stats <- df %>%
group_by(Treatment) %>%
get_summary_stats(MAB, type = "mean_se")
res.kruskal <- df %>%
kruskal_test(MAB ~ Treatment)
pwc <- df %>%
dunn_test(MAB ~ Treatment, p.adjust.method = "hochberg", detailed = T)
pwc
pwc <- pwc %>% add_xy_position(x = "Treatment")
sum_stats
df %>%
ggboxplot(x = "Treatment", y = "MAB") +
stat_pvalue_manual(pwc, hide.ns = T) +
labs(
subtitle = get_test_label(res.kruskal, detailed = TRUE),
caption = get_pwc_label(pwc)
) + geom_point(aes(group = Treatment, color = Plot))
pwc %>%
select(group1, group2, p.adj, p.adj.signif) %>%
mutate(P = round(p.adj, digits = 10))
df <- as_tibble(data) %>%
arrange(Plot) %>%
droplevels()
glimpse(df)
sum_stats <- df %>%
group_by(Plot) %>%
get_summary_stats(MAB, type = "mean_se")
percent(sum_stats$mean)
sum_stats
percent(sum_stats$mean)
res.kruskal <- df %>%
kruskal_test(MAB ~ Plot)
pwc <- df %>%
dunn_test(MAB ~ Plot, p.adjust.method = "hochberg")
pwc
pwc <- pwc %>% add_xy_position(x = "Plot")
sum_stats
df %>%
ggboxplot(x = "Plot", y = "MAB") +
stat_pvalue_manual(pwc, hide.ns = T) +
labs(
subtitle = get_test_label(res.kruskal, detailed = TRUE),
caption = get_pwc_label(pwc)
)
allsoil <- subset_samples(worle, matrix == "soil") %>%
filter_taxa(function(x) sum(x) >= 1, T)
tax_association <- tax_table(allsoil) %>%
data.frame() %>%
rownames_to_column("ASV") %>%
mutate(ASV_Association = ifelse(ASV %in% worle_manure_persitors, "MAB","SAB")) %>%
mutate(asv = ASV) %>%
column_to_rownames("ASV") %>%
rename(ASV = asv) %>%
as.matrix()
tax_table(allsoil) <- tax_association
df <- data.frame(sample_data(allsoil))
df <- df %>%
unite(P_D_S, c("plot", "sample_day", "soil_type"))
df$treatment <- as.factor(df$treatment)
df$unique_id <- as.factor(df$unique_id)
sample_data(allsoil) <- sample_data(df)
glimpse(data.frame(sample_data(allsoil)))
mergedsoil <- merge_samples(allsoil, "P_D_S")
colnames(mergedsoil@tax_table)
plot <- phylogeny_profile(mergedsoil, relative_abundance = T, classification = "ASV_Association")
plot
data <- plot$data %>%
select(Sample, ASV_Association, Abundance) %>%
separate(Sample, c("Plot", "Day", "Soil")) %>%
mutate(Treatment = case_when(
Plot %in% c(1,2,3) ~ "Crop + Strip",
Plot %in% c(4,5,6) ~ "Crop + Strip + Manure",
Plot %in% c(7,8,9) ~ "Crop + Manure")) %>%
pivot_wider(names_from = ASV_Association, values_from = Abundance)
kbl(data, digits = 5) %>%
kable_styling(fixed_thead = T) %>%
scroll_box(width = "100%", height = "500px")
SoilMAB <- data %>%
filter(Treatment %in% c("Crop + Manure", "Crop + Strip + Manure")) %>%
group_by(Treatment, Soil) %>%
summarise(
n=n(),
mean=mean(MAB),
sd=sd(MAB)
) %>%
mutate(se = sd/sqrt(n))  %>%
mutate(ic = se * qt((1-0.05)/2 + .5, n-1))
SoilMAB
CM_Crop_Mean <- paste(round(SoilMAB[2,4], digits = 6), round(SoilMAB[2,6], digits = 5), sep = " +/- ")
CSM_Crop_Mean <- paste(round(SoilMAB[4,4], digits = 6), round(SoilMAB[4,6], digits = 5), sep = " +/- ")
CSM_Strip_Mean <- paste(round(SoilMAB[5,4], digits = 6), round(SoilMAB[5,6], digits = 5), sep = " +/- ")
data %>%
filter(Treatment %in% c("Crop + Manure", "Crop + Strip + Manure"), Soil == "crop") %>%
arrange(Plot, Day) %>%
write_csv("../Data/MABSinCrop.CSV")
data %>%
filter(Treatment %in% c("Crop + Strip + Manure", "Crop + Strip"), Soil == "strip") %>%
arrange(Plot, Day) %>%
write_csv("../Data/MABSinStrip.CSV")
p <- mergedsoil %>%
transform_sample_counts(function(x) x / sum(x)) %>%
subset_taxa(ASV_Association == "MAB")
plot <- phylogeny_profile(p, relative_abundance = F, classification = "Phylum")
plot
data <- plot$data %>%
select(Sample, Phylum, Abundance) %>%
separate(Sample, c("Plot", "Day", "Soil")) %>%
mutate(Treatment = case_when(
Plot %in% c(1,2,3) ~ "Crop + Strip",
Plot %in% c(4,5,6) ~ "Crop + Strip + Manure",
Plot %in% c(7,8,9) ~ "Crop + Manure"))
levels(data$Treatment) <- c("Crop + Manure", "Crop + Strip + Manure", "Crop + Strip")
data$Treatment <- ordered(data$Treatment, levels = c("Crop + Strip", "Crop + Strip + Manure", "Crop + Manure"))
ggplot(data, aes(x = Day, y = Abundance, fill = Phylum)) +
geom_bar(stat = "identity") +
facet_nested(factor(Soil, levels = c("crop", "border", "strip")) ~ Treatment + Plot) +
theme_classic() +
theme(
legend.position = "top",
panel.background = element_rect(color = 'black', size = 1.4),
strip.text.x = element_text(size = 10, face = 'bold'),
strip.background = element_rect(colour = 'black', size = 1.4),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_color_manual(aesthetics = "fill", values = subset(colors, names(colors) %in% data$Phylum)) +
labs(x = "Sample day", y = "Relative abundance", fill = "ASV \nAssociation") +
guides(fill = guide_legend(nrow = 3))
ggsave(filename = "../Figures/manuretaxainsoil.png", plot = last_plot(), device = "png", width = 6.5, height = 7.5, units = "in", dpi = 350)
df <- as_tibble(data) %>%
filter(Treatment %in% c("Crop + Strip + Manure", "Crop + Manure"), Soil %in% c("crop")) %>%
arrange(Plot)
glimpse(df)
sum_stats <- df %>%
group_by(Treatment) %>%
get_summary_stats(Abundance, type = "mean_se")
res.kruskal <- df %>%
kruskal_test(Abundance ~ Treatment)
pwc <- df %>%
dunn_test(Abundance ~ Treatment)
pwc
pwc <- pwc %>% add_xy_position(x = "Treatment")
sum_stats
df %>%
ggboxplot(x = "Treatment", y = "Abundance") +
stat_pvalue_manual(pwc, hide.ns = T) +
labs(
subtitle = get_test_label(res.kruskal, detailed = TRUE),
caption = get_pwc_label(pwc)
)
df <- as_tibble(data) %>%
filter(Treatment %in% c("Crop + Strip + Manure"), Soil %in% c("strip", "crop")) %>%
arrange(Plot)
df
sum_stats <- df %>%
group_by(Soil) %>%
get_summary_stats(Abundance, type = "mean_se")
sum_stats
res.kruskal <- df %>%
kruskal_test(Abundance ~ Soil)
pwc <- df %>%
dunn_test(Abundance ~ Soil)
pwc
pwc <- pwc %>% add_xy_position(x = "Soil")
sum_stats
df %>%
ggboxplot(x = "Soil", y = "Abundance") +
stat_pvalue_manual(pwc, hide.ns = T) +
labs(
subtitle = get_test_label(res.kruskal, detailed = TRUE),
caption = get_pwc_label(pwc)
) +
ggtitle("Abundance of MAB compared between strip and crop \nfrom the Crop + Strip + Manure treatment")
pwc <- df %>%
dunn_test(Abundance ~ Soil, p.adjust.method = "hochberg")
pwc
pwc <- pwc %>% add_xy_position(x = "Soil")
sum_stats
df %>%
ggboxplot(x = "Soil", y = "Abundance") +
stat_pvalue_manual(pwc, hide.ns = T) +
labs(
subtitle = get_test_label(res.kruskal, detailed = TRUE),
caption = get_pwc_label(pwc)
) +
ggtitle("Abundance of MAB compared between strip and crop \nfrom the Crop + Strip + Manure treatment")
library(readxl)
fp$data
flow <- read_excel("../Data/WOR_Water_flow.xlsx")
glimpse(flow)
flow$sample_number <- as.character(flow$sample_number)
df <- fp$data %>%
rename(sample_number = time) %>%
filter(ASV_Association == "MAB") %>%
left_join(flow, by = c("plot", "sample_number")) %>%
select(treatment.x, plot, sample_number, Abundance, time_after_runoff_start, collection_time_sec, jare_tare_wt_g, jare_plus_runoff_wt_g, `flow_g/s`)
